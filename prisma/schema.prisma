// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Permission {
  ADMIN
  SUPER_ADMIN
  TECH
  USER
}

model User {
  id            String     @id @unique @default(uuid())
  name          String
  location      String
  age           Int
  dateofjoining DateTime   @default(now())
  permission    Permission @default(USER)

  // Posts created by a user
  posts Post[]

  // Tags user is interested in
  interestedTags Tag[] @relation("InterestedTags")
}

model Post {
  id         String   @id @unique @default(uuid())
  name       String
  link       String
  uploadedAt DateTime @default(now())
  language   String

  // User who created the post
  creator   User   @relation(fields: [creatorId], references: [id])
  creatorId String

  // Tags associated with this post through the intermediate model
  postTags PostTag[]
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  // Users interested in this tag
  interestedUsers User[] @relation("InterestedTags")

  // Posts associated with this tag through the intermediate model
  postTags PostTag[]
}

model PostTag {
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  tag   Tag @relation(fields: [tagId], references: [id])
  tagId Int

  @@id([postId, tagId])
}
